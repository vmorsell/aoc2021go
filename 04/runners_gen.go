// Code generated by lib/generate_runners.go; DO NOT EDIT

package main

import (
	"fmt"
	"io"
	"log"
	"os"
)

func main() {
	if err := run("04.in", parse, part1, part2); err != nil {
		log.Fatal(err)
	}
}

type parseFn func(r io.Reader) (data, error)
type execFn func(input data) (int, error)

func run(path string, parse parseFn, execFuncs ...execFn) error {
	if parse == nil {
		return fmt.Errorf("missing parser")
	}

	file, err := os.Open(path)
	if err != nil {
		return fmt.Errorf("open: %w", err)
	}
	defer file.Close()

	input, err := parse(file)
	if err != nil {
		return fmt.Errorf("parse: %w", err)
	}

	for i, fn := range execFuncs {
		res, err := fn(input)
		if err != nil {
			return fmt.Errorf("exec fn %d: %w", i, err)
		}
		fmt.Println(res)
	}
	return nil
}
